From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: M2ke4U <wangxyper@163.com>
Date: Sat, 24 Jun 2023 08:23:18 +0800
Subject: [PATCH] Xero map protocol support


diff --git a/src/main/java/me/earthme/molia/MoliaConfig.java b/src/main/java/me/earthme/molia/MoliaConfig.java
index 28b48b0c80d51b98501c2d6f767aed0a6cbd5661..adcd3f1fee51d37a4ebd308d5d6ad84a9b180cc2 100644
--- a/src/main/java/me/earthme/molia/MoliaConfig.java
+++ b/src/main/java/me/earthme/molia/MoliaConfig.java
@@ -26,6 +26,8 @@ public class MoliaConfig {
     public static boolean enablePCASyncProtocol = false;
     public static boolean enableBBORProtocol = false;
     public static String pcaSyncPlayerEntity = "NOBODY";
+    public static boolean enableXeroMapProtocol = false;
+    public static int xeroServerId = 1;
 
     //Fake player
     public static boolean enableFakePlayerSkipSleep = true;
@@ -46,6 +48,7 @@ public class MoliaConfig {
         }
         configEntry.options().copyDefaults(true);
 
+        //Init the config values
         checkStuckInWallInterval = getLong("optimizations.check_stuck_in_wall_interval",checkStuckInWallInterval);
         entityWakeUpDurationRatioStandardDeviation = getDouble("optimizations.entity_wake_up_duration_ratio_standard_deviation",entityWakeUpDurationRatioStandardDeviation);
         acquirePoiForStuckEntity = getInt("optimizations.acquire_poi_for_stuck_entity",acquirePoiForStuckEntity);
@@ -58,6 +61,8 @@ public class MoliaConfig {
         enablePCASyncProtocol = getBoolean("gameplay.enable_pca_sync_protocol",enablePCASyncProtocol);
         enableBBORProtocol = getBoolean("gameplay.enable_bbor_protocol",enableBBORProtocol);
         pcaSyncPlayerEntity = getString("gameplay.pca_sync_player_entity",pcaSyncPlayerEntity);
+        enableXeroMapProtocol = getBoolean("gameplay.enable_xero_map_protocol",enableXeroMapProtocol);
+        xeroServerId = getInt("gameplay.xero_server_id",1);
 
         enableFakePlayerSkipSleep = getBoolean("fakeplayer.enable_fake_player_skip_sleep",enableFakePlayerSkipSleep);
         fakePlayerSizeLimit = getInt("fakeplayer.fake_player_size_limit",fakePlayerSizeLimit);
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 457d901e4ef22188f4087d8b672bf2541e48d112..020d7abd424971af04b8be029675c7924113007c 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -1363,6 +1363,7 @@ public abstract class PlayerList {
         player.connection.send(new ClientboundInitializeBorderPacket(worldborder));
         player.connection.send(new ClientboundSetTimePacket(world.getGameTime(), world.getDayTime(), world.getGameRules().getBoolean(GameRules.RULE_DAYLIGHT)));
         player.connection.send(new ClientboundSetDefaultSpawnPositionPacket(world.getSharedSpawnPos(), world.getSharedSpawnAngle()));
+        top.leavesmc.leaves.protocol.XaeroMapProtocol.onSendWorldInfo(player); // Leaves - xaero map protocol
         if (world.isRaining()) {
             // CraftBukkit start - handle player weather
             // entityplayer.connection.send(new PacketPlayOutGameStateChange(PacketPlayOutGameStateChange.START_RAINING, 0.0F));
diff --git a/src/main/java/top/leavesmc/leaves/protocol/XaeroMapProtocol.java b/src/main/java/top/leavesmc/leaves/protocol/XaeroMapProtocol.java
new file mode 100644
index 0000000000000000000000000000000000000000..f564316c921d5507c323294c61c33b98e8404be7
--- /dev/null
+++ b/src/main/java/top/leavesmc/leaves/protocol/XaeroMapProtocol.java
@@ -0,0 +1,39 @@
+package top.leavesmc.leaves.protocol;
+
+import io.netty.buffer.Unpooled;
+import me.earthme.molia.MoliaConfig;
+import net.minecraft.network.FriendlyByteBuf;
+import net.minecraft.resources.ResourceLocation;
+import net.minecraft.server.level.ServerPlayer;
+import org.jetbrains.annotations.Contract;
+import org.jetbrains.annotations.NotNull;
+import top.leavesmc.leaves.util.ProtocolUtils;
+
+public class XaeroMapProtocol {
+
+    public static final String PROTOCOL_ID_MINI = "xaerominimap";
+    public static final String PROTOCOL_ID_WORLD = "xaeroworldmap";
+
+    private static final ResourceLocation MINIMAP_KEY = idMini("main");
+    private static final ResourceLocation WORLDMAP_KEY = idWorld("main");
+
+    @Contract("_ -> new")
+    public static @NotNull ResourceLocation idMini(String path) {
+        return new ResourceLocation(PROTOCOL_ID_MINI, path);
+    }
+
+    @Contract("_ -> new")
+    public static @NotNull ResourceLocation idWorld(String path) {
+        return new ResourceLocation(PROTOCOL_ID_WORLD, path);
+    }
+
+    public static void onSendWorldInfo(@NotNull ServerPlayer player) {
+        if (MoliaConfig.enableXeroMapProtocol) {
+            FriendlyByteBuf buf = new FriendlyByteBuf(Unpooled.buffer());
+            buf.writeByte(0);
+            buf.writeInt(MoliaConfig.xeroServerId);
+            ProtocolUtils.sendPayloadPacket(player, MINIMAP_KEY, buf);
+            ProtocolUtils.sendPayloadPacket(player, WORLDMAP_KEY, buf);
+        }
+    }
+}
