From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrHua269 <wangxyper@163.com>
Date: Sun, 11 Jun 2023 17:12:41 +0800
Subject: [PATCH] Gale Reduce acquire POI for stuck entities


diff --git a/src/main/java/me/earthme/molia/MoliaConfig.java b/src/main/java/me/earthme/molia/MoliaConfig.java
index 592d4da5d097ded81406cb4cf329f61f72ad570c..d1215e2b3202037accac0d553cda6bc3b2b770c3 100644
--- a/src/main/java/me/earthme/molia/MoliaConfig.java
+++ b/src/main/java/me/earthme/molia/MoliaConfig.java
@@ -9,6 +9,7 @@ import java.io.IOException;
 public class MoliaConfig {
     public static long checkStuckInWallInterval = 10;
     public static double entityWakeUpDurationRatioStandardDeviation = 0.2;
+    public static int acquirePoiForStuckEntity = 200;
 
     private static final YamlConfiguration configEntry = new YamlConfiguration();
     private static final File CONFIG_FILE = new File("molia.yml");
@@ -22,8 +23,9 @@ public class MoliaConfig {
         }
         configEntry.options().copyDefaults(true);
 
-        checkStuckInWallInterval = getLong("optimizations.check_stuck_in_wall_interval",10);
-        entityWakeUpDurationRatioStandardDeviation = getDouble("optimizations.entity_wake_up_duration_ratio_standard_deviation",0.2D);
+        checkStuckInWallInterval = getLong("optimizations.check_stuck_in_wall_interval",checkStuckInWallInterval);
+        entityWakeUpDurationRatioStandardDeviation = getDouble("optimizations.entity_wake_up_duration_ratio_standard_deviation",entityWakeUpDurationRatioStandardDeviation);
+        acquirePoiForStuckEntity = getInt("optimizations.acquire_poi_for_stuck_entity",acquirePoiForStuckEntity);
 
         save();
     }
@@ -46,7 +48,7 @@ public class MoliaConfig {
         return configEntry.getDouble(key);
     }
 
-    public static long getLong(String key,int def){
+    public static long getLong(String key,long def){
         configEntry.addDefault(key,def);
         return configEntry.getLong(key);
     }
diff --git a/src/main/java/net/minecraft/world/entity/ai/behavior/AcquirePoi.java b/src/main/java/net/minecraft/world/entity/ai/behavior/AcquirePoi.java
index d4c91e0a0c64fcb7f1145de3f30134cb1f1f8ee6..e6bd9231fd344c5ce27e3bac052347731940fbae 100644
--- a/src/main/java/net/minecraft/world/entity/ai/behavior/AcquirePoi.java
+++ b/src/main/java/net/minecraft/world/entity/ai/behavior/AcquirePoi.java
@@ -9,10 +9,13 @@ import java.util.Set;
 import java.util.function.Predicate;
 import java.util.stream.Collectors;
 import javax.annotation.Nullable;
+
+import me.earthme.molia.MoliaConfig;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.GlobalPos;
 import net.minecraft.core.Holder;
 import net.minecraft.network.protocol.game.DebugPackets;
+import net.minecraft.server.level.ServerLevel;
 import net.minecraft.util.RandomSource;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.PathfinderMob;
@@ -26,6 +29,13 @@ import org.apache.commons.lang3.mutable.MutableLong;
 public class AcquirePoi {
     public static final int SCAN_RANGE = 48;
 
+    // Gale start - Airplane - reduce acquire POI for stuck entities
+    public static void addAdditionalTimeToMutableLongIfEntityIsStuck(MutableLong mutableLong, ServerLevel world, PathfinderMob entity) {
+        long stuckEntityAdditionalWaitTime = MoliaConfig.acquirePoiForStuckEntity;
+        mutableLong.add(stuckEntityAdditionalWaitTime <= 0L ? 0L : entity.getNavigation().isStuck() ? stuckEntityAdditionalWaitTime : 0L);
+    }
+    // Gale end - Airplane - reduce acquire POI for stuck entities
+
     public static BehaviorControl<PathfinderMob> create(Predicate<Holder<PoiType>> poiPredicate, MemoryModuleType<GlobalPos> poiPosModule, boolean onlyRunIfChild, Optional<Byte> entityStatus) {
         return create(poiPredicate, poiPosModule, poiPosModule, onlyRunIfChild, entityStatus);
     }
@@ -42,11 +52,13 @@ public class AcquirePoi {
                         return false;
                     } else if (mutableLong.getValue() == 0L) {
                         mutableLong.setValue(world.getGameTime() + (long)world.random.nextInt(20));
+                        addAdditionalTimeToMutableLongIfEntityIsStuck(mutableLong, world, entity); // Gale - Airplane - reduce acquire POI for stuck entities
                         return false;
                     } else if (world.getGameTime() < mutableLong.getValue()) {
                         return false;
                     } else {
                         mutableLong.setValue(time + 20L + (long)world.getRandom().nextInt(20));
+                        addAdditionalTimeToMutableLongIfEntityIsStuck(mutableLong, world, entity); // Gale - Airplane - reduce acquire POI for stuck entities
                         PoiManager poiManager = world.getPoiManager();
                         long2ObjectMap.long2ObjectEntrySet().removeIf((entry) -> {
                             return !entry.getValue().isStillValid(time);
