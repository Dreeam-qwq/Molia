From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: M2ke4U <79621885+MrHua269@users.noreply.github.com>
Date: Sat, 28 Oct 2023 20:11:06 +0800
Subject: [PATCH] Pufferfish Entity TTL


diff --git a/src/main/java/me/earthme/molia/MoliaConfig.java b/src/main/java/me/earthme/molia/MoliaConfig.java
index 844eec136c879d105bff1c707177386d5812c117..a8e6813dcb7a537c07e0fda362e131ba6f838cd2 100644
--- a/src/main/java/me/earthme/molia/MoliaConfig.java
+++ b/src/main/java/me/earthme/molia/MoliaConfig.java
@@ -7,6 +7,8 @@ import net.minecraft.core.registries.BuiltInRegistries;
 import java.io.File;
 import java.io.IOException;
 import java.util.Collections;
+import java.util.Locale;
+import java.util.Map;
 
 public class MoliaConfig {
     //All values
@@ -21,6 +23,7 @@ public class MoliaConfig {
     public static int startDistanceSquared = 144;
     public static int maximumActivationPrio = 20;
     public static int activationDistanceMod = 8;
+    public static Map<String, Integer> entityTTLs;
 
 
     public static double entityWakeUpDurationRatioStandardDeviation = 0.2;
@@ -40,6 +43,14 @@ public class MoliaConfig {
                     entityType.dabEnabled = false;
                 }, () -> MinecraftServer.LOGGER.warn("Unknown entity \"" + name + "\"")));
     }
+    public static void initEntityTTL(){
+        getInt("optimizations.entity_timeouts.SNOWBALL", -1);
+        getInt("optimizations.entity_timeouts.LLAMA_SPIT", -1);
+        for (EntityType<?> entityType : BuiltInRegistries.ENTITY_TYPE) {
+            String type = EntityType.getKey(entityType).getPath().toUpperCase(Locale.ROOT);
+            entityType.ttl = getInt("optimizations.entity_timeouts." + type, -1);
+        }
+    }
 
     public static void loadAllValues(){
         allowVoidTrading = getBoolean("fixes.allow_void_trading",allowVoidTrading);
@@ -53,7 +64,9 @@ public class MoliaConfig {
         startDistanceSquared = getInt("optimizations.dab.start_distance",(int)Math.sqrt(startDistanceSquared)) ^ 2;
         maximumActivationPrio = getInt("optimizations.dab.max_tick_freq",maximumActivationPrio);
         activationDistanceMod = getInt("optimizations.dab.activation_dist_mod",activationDistanceMod);
+
         initDAB();
+        initEntityTTL();
 
         entityWakeUpDurationRatioStandardDeviation = getDouble("optimizations.entity_wakeup_duration_ratio_standard_deviation",entityWakeUpDurationRatioStandardDeviation);
         enableSuffocationOptimization = getBoolean("optimizations.enable_suffocation_optimization",enableSuffocationOptimization);
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 72971127c68422c7c013c990cd6a8d113197add0..84aa50834c7265968a3615b9d717e1509823656d 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -807,6 +807,12 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     }
 
     public void tick() {
+        // Pufferfish start - entity TTL
+        if (type != EntityType.PLAYER && type.ttl >= 0 && this.tickCount >= type.ttl) {
+            discard();
+            return;
+        }
+        // Pufferfish end - entity TTL
         this.baseTick();
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/EntityType.java b/src/main/java/net/minecraft/world/entity/EntityType.java
index 9d98c3a375bd2df956794303f3a83d3db2546cfa..a1a86e05c8beae0aeb79daaf4e9592cc3dd2ce89 100644
--- a/src/main/java/net/minecraft/world/entity/EntityType.java
+++ b/src/main/java/net/minecraft/world/entity/EntityType.java
@@ -302,6 +302,7 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
     private final int clientTrackingRange;
     private final int updateInterval;
     public boolean dabEnabled = false; // Pufferfish
+    public int ttl = -1; // Pufferfish
     @Nullable
     private String descriptionId;
     @Nullable
