From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrHua269 <wangxyper@163.com>
Date: Sun, 11 Jun 2023 15:56:41 +0800
Subject: [PATCH] Add config file


diff --git a/src/main/java/me/earthme/molia/MoliaConfig.java b/src/main/java/me/earthme/molia/MoliaConfig.java
new file mode 100644
index 0000000000000000000000000000000000000000..1668d2f5b2e9dbf82f8c756d0853cb60f9b9197c
--- /dev/null
+++ b/src/main/java/me/earthme/molia/MoliaConfig.java
@@ -0,0 +1,56 @@
+package me.earthme.molia;
+
+import org.bukkit.configuration.InvalidConfigurationException;
+import org.bukkit.configuration.file.YamlConfiguration;
+
+import java.io.File;
+import java.io.IOException;
+
+public class MoliaConfig {
+    public static long checkStuckInWallInterval = 10;
+
+    private static final YamlConfiguration configEntry = new YamlConfiguration();
+    private static final File CONFIG_FILE = new File("molia.yml");
+
+    public static void init(){
+        try {
+            configEntry.load(CONFIG_FILE);
+        }catch (IOException ignored){
+        } catch (InvalidConfigurationException e) {
+            e.printStackTrace();
+        }
+        configEntry.options().copyDefaults(true);
+
+        checkStuckInWallInterval = getLong("optimizations.check_stuck_in_wall_interval",10);
+
+        save();
+    }
+
+    public static void save(){
+        try {
+            configEntry.save(CONFIG_FILE);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+
+    public static int getInt(String key,int def){
+        configEntry.addDefault(key,def);
+        return configEntry.getInt(key);
+    }
+
+    public static long getLong(String key,int def){
+        configEntry.addDefault(key,def);
+        return configEntry.getLong(key);
+    }
+
+    public static String getString(String key,String def){
+        configEntry.addDefault(key,def);
+        return configEntry.getString(key);
+    }
+
+    public static boolean getBoolean(String key,boolean def){
+        configEntry.addDefault(key,def);
+        return configEntry.getBoolean(key);
+    }
+}
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 7abd4f38ae59a6019137345af960fd60a3c7adf0..896b2606cdc2ff28c5897a789df14184d195c69a 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -19,6 +19,8 @@ import java.util.Locale;
 import java.util.Optional;
 import java.util.function.BooleanSupplier;
 import javax.annotation.Nullable;
+
+import me.earthme.molia.MoliaConfig;
 import net.minecraft.DefaultUncaughtExceptionHandler;
 import net.minecraft.DefaultUncaughtExceptionHandlerWithName;
 import net.minecraft.SharedConstants;
@@ -274,6 +276,8 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         server.enablePlugins(org.bukkit.plugin.PluginLoadOrder.STARTUP);
         // CraftBukkit end
 
+        MoliaConfig.init(); //Molia
+
         // Paper start
         boolean usingProxy = org.spigotmc.SpigotConfig.bungee || io.papermc.paper.configuration.GlobalConfiguration.get().proxies.velocity.enabled;
         String proxyFlavor = (io.papermc.paper.configuration.GlobalConfiguration.get().proxies.velocity.enabled) ? "Velocity" : "BungeeCord";
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 2e7d6b2431d39d613659093882b8a78a18fd8597..69dc639b563d44d69a81bbb37a12d9975966af08 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -19,6 +19,8 @@ import java.util.Optional;
 import java.util.UUID;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
+
+import me.earthme.molia.MoliaConfig;
 import net.minecraft.BlockUtil;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.commands.arguments.EntityAnchorArgument;
@@ -398,7 +400,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
 
             if (!this.level.isClientSide) {
                 // Gale start - Pufferfish - reduce in wall checks
-                long checkStuckInWallInterval = 10;
+                long checkStuckInWallInterval = MoliaConfig.checkStuckInWallInterval;
                 if ((checkStuckInWallInterval <= 1 || (tickCount % checkStuckInWallInterval == 0 && couldPossiblyBeHurt(1.0F))) && this.isInWall()) {
                     // Gale end - Pufferfish - reduce in wall checks
                     this.hurt(this.damageSources().inWall(), 1.0F);
