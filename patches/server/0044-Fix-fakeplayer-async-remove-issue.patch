From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: wangxyper <wangxyper@163.com>
Date: Wed, 30 Aug 2023 07:38:36 +0800
Subject: [PATCH] Fix fakeplayer async remove issue


diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index fa7c99aae9011f3111d145fb85158eee3b5ee958..ec3b14457146d1fa18a475e94114d029466b7880 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -27,6 +27,9 @@ import java.util.UUID;
 import java.util.function.Function;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
+
+import io.papermc.paper.util.TickThread;
+import me.earthme.molia.util.SchedulerUtil;
 import net.minecraft.ChatFormatting;
 import net.minecraft.FileUtil;
 import net.minecraft.commands.CommandSourceStack;
@@ -428,7 +431,13 @@ public abstract class PlayerList {
         if (me.earthme.molia.MoliaConfig.fakeplayerSupport) {
             ServerBot bot = ServerBot.getBot(player.getScoreboardName().toLowerCase(java.util.Locale.ROOT));
             if (bot != null) {
-                bot.die(bot.damageSources().fellOutOfWorld()); // Leaves - remove bot with the same name
+                if (TickThread.isTickThreadFor(bot)){
+                    bot.die(bot.damageSources().fellOutOfWorld()); // Leaves - remove bot with the same name
+                }else{
+                    SchedulerUtil.regionSchedulerAsExecutor(bot.getLocation()).execute(()->{
+                        bot.die(bot.damageSources().fellOutOfWorld()); // Leaves - remove bot with the same name
+                    });
+                }
                 this.playersByName.put(player.getScoreboardName().toLowerCase(java.util.Locale.ROOT), player);
                 this.playersByUUID.put(player.getUUID(), player);
             }
diff --git a/src/main/java/top/leavesmc/leaves/bot/BotCommand.java b/src/main/java/top/leavesmc/leaves/bot/BotCommand.java
index 79aebbfd4a37b276c6759c30225f05569dca2c18..9a0beb3d38977ef908815844fe1a447d189e5cdc 100644
--- a/src/main/java/top/leavesmc/leaves/bot/BotCommand.java
+++ b/src/main/java/top/leavesmc/leaves/bot/BotCommand.java
@@ -1,5 +1,7 @@
 package top.leavesmc.leaves.bot;
 
+import io.papermc.paper.util.TickThread;
+import me.earthme.molia.util.SchedulerUtil;
 import org.bukkit.Bukkit;
 import org.bukkit.ChatColor;
 import org.bukkit.Location;
@@ -161,6 +163,12 @@ public class BotCommand extends Command {
             return;
         }
 
+        if (!TickThread.isTickThreadFor(bot)){
+            SchedulerUtil.regionSchedulerAsExecutor(bot.getLocation()).execute(()->{
+                bot.die(bot.damageSources().fellOutOfWorld());
+            });
+            return;
+        }
         bot.die(bot.damageSources().fellOutOfWorld());
     }
 
diff --git a/src/main/java/top/leavesmc/leaves/bot/ServerBot.java b/src/main/java/top/leavesmc/leaves/bot/ServerBot.java
index 3303e96c87df7d50d9e9e8a29a2296c72b041e34..53e0e370ed8185b457b1670010a8841d800dcbee 100644
--- a/src/main/java/top/leavesmc/leaves/bot/ServerBot.java
+++ b/src/main/java/top/leavesmc/leaves/bot/ServerBot.java
@@ -6,6 +6,7 @@ import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.mojang.authlib.GameProfile;
 import com.mojang.authlib.properties.Property;
+import io.papermc.paper.util.TickThread;
 import me.earthme.molia.util.SchedulerUtil;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
@@ -615,7 +616,13 @@ public class ServerBot extends ServerPlayer {
         Iterator<ServerBot> iterator = bots.iterator();
         while (iterator.hasNext()) {
             ServerBot bot = iterator.next();
-            bot.die(bot.damageSources().fellOutOfWorld());
+            if (TickThread.isTickThreadFor(bot)){
+                bot.die(bot.damageSources().fellOutOfWorld());
+            }else{
+                SchedulerUtil.regionSchedulerAsExecutor(bot.getLocation()).execute(()->{
+                    bot.die(bot.damageSources().fellOutOfWorld());
+                });
+            }
         }
         return true;
     }
diff --git a/src/main/java/top/leavesmc/leaves/entity/CraftBotManager.java b/src/main/java/top/leavesmc/leaves/entity/CraftBotManager.java
index df5796bfa333a287ccd486be9a9cdae4ca5dc757..2e7ce8fca5a89d0b8aba99603c15539cd52e66ba 100644
--- a/src/main/java/top/leavesmc/leaves/entity/CraftBotManager.java
+++ b/src/main/java/top/leavesmc/leaves/entity/CraftBotManager.java
@@ -2,6 +2,8 @@ package top.leavesmc.leaves.entity;
 
 import com.google.common.base.Function;
 import com.google.common.collect.Lists;
+import io.papermc.paper.util.TickThread;
+import me.earthme.molia.util.SchedulerUtil;
 import org.bukkit.Location;
 import org.bukkit.util.Consumer;
 import org.jetbrains.annotations.NotNull;
@@ -54,6 +56,12 @@ public class CraftBotManager implements BotManager {
     public void removeBot(@NotNull String name) {
         ServerBot bot = ServerBot.getBot(name);
         if (bot != null) {
+            if (!TickThread.isTickThreadFor(bot)){
+                SchedulerUtil.regionSchedulerAsExecutor(bot.getLocation()).execute(()->{
+                    bot.die(bot.damageSources().fellOutOfWorld());
+                });
+                return;
+            }
             bot.die(bot.damageSources().fellOutOfWorld());
         }
     }
@@ -62,6 +70,12 @@ public class CraftBotManager implements BotManager {
     public void removeBot(@NotNull UUID uuid) {
         ServerBot bot = ServerBot.getBot(uuid);
         if (bot != null) {
+            if (!TickThread.isTickThreadFor(bot)){
+                SchedulerUtil.regionSchedulerAsExecutor(bot.getLocation()).execute(()->{
+                    bot.die(bot.damageSources().fellOutOfWorld());
+                });
+                return;
+            }
             bot.die(bot.damageSources().fellOutOfWorld());
         }
     }
