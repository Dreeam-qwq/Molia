From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrHua269 <wangxyper@163.com>
Date: Tue, 22 Aug 2023 16:15:15 +0800
Subject: [PATCH] Gale Don't load chunks to activate climbing entities


diff --git a/src/main/java/me/earthme/molia/MoliaConfig.java b/src/main/java/me/earthme/molia/MoliaConfig.java
index ae84d3e3c1c16ee158ea5b596f06dbbb941eb251..689961199934eb45e5b1bb418e76a127a5f657af 100644
--- a/src/main/java/me/earthme/molia/MoliaConfig.java
+++ b/src/main/java/me/earthme/molia/MoliaConfig.java
@@ -4,7 +4,6 @@ import com.google.common.collect.Lists;
 import net.minecraft.core.registries.BuiltInRegistries;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.world.entity.EntityType;
-import org.bukkit.Bukkit;
 import org.bukkit.configuration.InvalidConfigurationException;
 import org.bukkit.configuration.file.YamlConfiguration;
 import top.leavesmc.leaves.bot.BotCommand;
@@ -21,6 +20,7 @@ public class MoliaConfig {
     public static double entityWakeUpDurationRatioStandardDeviation = 0.2;
     public static boolean enableSuffocationOptimization = true;
     public static boolean loadChunksForPhantomSpawner = false;
+    public static boolean loadChunksForActivatingClimbingMobs = false;
     public static boolean dabEnabled = true;
     public static int maximumActivationPrio = 20;
     public static int startDistanceSquared;
@@ -58,6 +58,7 @@ public class MoliaConfig {
         entityWakeUpDurationRatioStandardDeviation = getDouble("optimizations.entity_wake_up_duration_ratio_standard_deviation",entityWakeUpDurationRatioStandardDeviation);
         enableSuffocationOptimization = getBoolean("optimizations.enable_suffocation_optimization",enableSuffocationOptimization);
         loadChunksForPhantomSpawner = getBoolean("optimizations.load_chunks_for_phantom_spawner",loadChunksForPhantomSpawner);
+        loadChunksForActivatingClimbingMobs = getBoolean("optimizations.load_chunks_for_activating_climbing_mobs",loadChunksForActivatingClimbingMobs);
 
         //Dab
         initDab();
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 5b38641346f39bdad3dc128d959070f2f83c4ee8..f43fec7e9eb2ec912c1f9fa106eee902d197aa3c 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -5350,6 +5350,16 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         return this.feetBlockState;
     }
 
+    // Gale start - don't load chunks to activate climbing entities
+    public @Nullable BlockState getFeetBlockStateIfLoaded() {
+        if (this.feetBlockState == null) {
+            this.feetBlockState = this.level.getBlockStateIfLoaded(this.blockPosition());
+        }
+
+        return this.feetBlockState;
+    }
+    // Gale end - don't load chunks to activate climbing entities
+
     public ChunkPos chunkPosition() {
         return this.chunkPosition;
     }
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 318fbdf7cdd2db3026184d86f61a91b53aa1bd4d..1b909cb52c8289a757e9497bd811bc123e79b932 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -1992,19 +1992,43 @@ public abstract class LivingEntity extends Entity implements Attackable {
 
     public boolean onClimableCached() {
         if (!this.blockPosition().equals(this.lastClimbingPosition)) {
-            this.cachedOnClimable = this.onClimbable();
-            this.lastClimbingPosition = this.blockPosition();
+            // Gale start - don't load chunks to activate climbing entities
+            Boolean onClimbableIfLoaded = this.onClimbable(MoliaConfig.loadChunksForActivatingClimbingMobs);
+            if (onClimbableIfLoaded != null) {
+                this.cachedOnClimable = onClimbableIfLoaded;
+                this.lastClimbingPosition = this.blockPosition();
+            } else {
+                this.cachedOnClimable = false;
+                this.lastClimbingPosition = null;
+            }
+            // Gale end - don't load chunks to activate climbing entities
         }
         return this.cachedOnClimable;
     }
     // Pufferfish end
 
     public boolean onClimbable() {
+        // Gale start - don't load chunks to activate climbing entities
+        return onClimbable(true);
+    }
+
+    public Boolean onClimbable(boolean loadChunk) {
+        // Gale end - don't load chunks to activate climbing entities
         if (this.isSpectator()) {
             return false;
         } else {
             BlockPos blockposition = this.blockPosition();
-            BlockState iblockdata = this.getFeetBlockState();
+            // Gale start - don't load chunks to activate climbing entities
+            BlockState iblockdata;
+            if (loadChunk) {
+                iblockdata = this.getFeetBlockState();
+            } else {
+                iblockdata = this.getFeetBlockStateIfLoaded();
+                if (iblockdata == null) {
+                    return null;
+                }
+            }
+            // Gale end - don't load chunks to activate climbing entities
 
             if (iblockdata.is(BlockTags.CLIMBABLE)) {
                 this.lastClimbablePos = Optional.of(blockposition);
