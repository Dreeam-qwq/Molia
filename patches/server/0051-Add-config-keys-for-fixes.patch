From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrHua269 <wangxyper@163.com>
Date: Sun, 16 Jul 2023 18:27:44 +0800
Subject: [PATCH] Add config keys for fixes


diff --git a/src/main/java/io/papermc/paper/chunk/system/RegionizedPlayerChunkLoader.java b/src/main/java/io/papermc/paper/chunk/system/RegionizedPlayerChunkLoader.java
index 69a9dc0aa53d4bf1ae841db9354b377dafedab8d..f6fc37663b95c4384295f8b269b8102670cba7fd 100644
--- a/src/main/java/io/papermc/paper/chunk/system/RegionizedPlayerChunkLoader.java
+++ b/src/main/java/io/papermc/paper/chunk/system/RegionizedPlayerChunkLoader.java
@@ -15,6 +15,7 @@ import it.unimi.dsi.fastutil.longs.LongArrayList;
 import it.unimi.dsi.fastutil.longs.LongComparator;
 import it.unimi.dsi.fastutil.longs.LongHeapPriorityQueue;
 import it.unimi.dsi.fastutil.longs.LongOpenHashSet;
+import me.earthme.molia.MoliaConfig;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ClientboundSetChunkCacheCenterPacket;
 import net.minecraft.network.protocol.game.ClientboundSetChunkCacheRadiusPacket;
@@ -481,7 +482,8 @@ public class RegionizedPlayerChunkLoader {
 
         private void sendChunk(final int chunkX, final int chunkZ) {
             //Molia start
-            if (this.sentChunks.contains(CoordinateUtils.getChunkKey(chunkX, chunkZ))){
+            //Molia - add config for this
+            if (this.sentChunks.contains(CoordinateUtils.getChunkKey(chunkX, chunkZ)) && MoliaConfig.fixDoubleChunkSend){
                 return;
             }
             //Molia end
diff --git a/src/main/java/io/papermc/paper/chunk/system/entity/EntityLookup.java b/src/main/java/io/papermc/paper/chunk/system/entity/EntityLookup.java
index ea1290e681549f9c8446cc0e64c727ee3e76ab41..8fee6ba052056bb420cc35f184a56ba9a5cb91fc 100644
--- a/src/main/java/io/papermc/paper/chunk/system/entity/EntityLookup.java
+++ b/src/main/java/io/papermc/paper/chunk/system/entity/EntityLookup.java
@@ -9,6 +9,7 @@ import io.papermc.paper.world.ChunkEntitySlices;
 import it.unimi.dsi.fastutil.ints.Int2ReferenceOpenHashMap;
 import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;
 import it.unimi.dsi.fastutil.objects.Object2ReferenceOpenHashMap;
+import me.earthme.molia.MoliaConfig;
 import net.minecraft.core.BlockPos;
 import io.papermc.paper.chunk.system.ChunkSystem;
 import net.minecraft.server.level.ChunkHolder;
@@ -511,23 +512,28 @@ public final class EntityLookup implements LevelEntityGetter<Entity> {
         TickThread.ensureTickThread(this.world, entity.sectionX, entity.sectionZ, "Cannot move entity off-main");
         final ChunkEntitySlices old = this.getChunk(entity.sectionX, entity.sectionZ); //Molia - Move up
 
-        if(!TickThread.isTickThreadFor(this.world,newSectionX,newSectionZ)){
-            boolean teleportAsyncTask;
-            while(!(teleportAsyncTask = entity.teleportAsync(
-                    this.world,
-                    entity.getPosition(),
-                    entity.getYRot(),
-                    entity.getXRot(),
-                    null,
-                    PlayerTeleportEvent.TeleportCause.UNKNOWN,
-                    Entity.TELEPORT_FLAG_LOAD_CHUNK | Entity.TELEPORT_FLAG_TELEPORT_PASSENGERS,
-                    null
-            )));
-            //Paper's logic
-            if (!old.removeEntity(entity,entity.sectionY)){
-                LOGGER.warn("Could not remove entity " + entity + " from its old chunk section (" + entity.sectionX + "," + entity.sectionY + "," + entity.sectionZ + ") since it was not contained in the section");
-            }
-            return this.getOrCreateChunk(newSectionX, newSectionZ);
+        //Add config for this
+        if (MoliaConfig.fixMoveEntityOffMain){
+            if(!TickThread.isTickThreadFor(this.world,newSectionX,newSectionZ)){
+                boolean teleportAsyncTask;
+                while(!(teleportAsyncTask = entity.teleportAsync(
+                        this.world,
+                        entity.getPosition(),
+                        entity.getYRot(),
+                        entity.getXRot(),
+                        null,
+                        PlayerTeleportEvent.TeleportCause.UNKNOWN,
+                        Entity.TELEPORT_FLAG_LOAD_CHUNK | Entity.TELEPORT_FLAG_TELEPORT_PASSENGERS,
+                        null
+                )));
+                //Paper's logic
+                if (!old.removeEntity(entity,entity.sectionY)){
+                    LOGGER.warn("Could not remove entity " + entity + " from its old chunk section (" + entity.sectionX + "," + entity.sectionY + "," + entity.sectionZ + ") since it was not contained in the section");
+                }
+                return this.getOrCreateChunk(newSectionX, newSectionZ);
+            }
+        }else{
+            TickThread.ensureTickThread(this.world,newSectionX,newSectionZ,"Cannot move entity off-main");
         }
         //Molia end
 
diff --git a/src/main/java/me/earthme/molia/MoliaConfig.java b/src/main/java/me/earthme/molia/MoliaConfig.java
index 95fe40b7003a92d83787ed92e829c9d28d5dd54c..37b8b08c541fc75a047a8a18a7c007caa6881d5b 100644
--- a/src/main/java/me/earthme/molia/MoliaConfig.java
+++ b/src/main/java/me/earthme/molia/MoliaConfig.java
@@ -21,6 +21,8 @@ public class MoliaConfig {
 
     //Misc
     public static String serverModName = "Molia";
+    public static boolean fixMoveEntityOffMain = true;
+    public static boolean fixDoubleChunkSend = true;
 
     //Unsafe
     public static boolean disableFoliaPluginCheck = false;
@@ -79,6 +81,8 @@ public class MoliaConfig {
         prepareForDAB();
 
         serverModName = getString("misc.server_mod_name","Molia");
+        fixDoubleChunkSend = getBoolean("misc.fix_double_chunk_send",fixDoubleChunkSend);
+        fixMoveEntityOffMain = getBoolean("misc.fix_move_entity_off_main",fixMoveEntityOffMain);
 
         disableFoliaPluginCheck = getBoolean("unsafe.disable_folia_plugin_check",disableFoliaPluginCheck);
 
