From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrHua269 <wangxyper@163.com>
Date: Sun, 11 Jun 2023 16:01:54 +0800
Subject: [PATCH] Gale Variable entity wake-up duration


diff --git a/src/main/java/me/earthme/molia/MoliaConfig.java b/src/main/java/me/earthme/molia/MoliaConfig.java
index 1668d2f5b2e9dbf82f8c756d0853cb60f9b9197c..592d4da5d097ded81406cb4cf329f61f72ad570c 100644
--- a/src/main/java/me/earthme/molia/MoliaConfig.java
+++ b/src/main/java/me/earthme/molia/MoliaConfig.java
@@ -8,6 +8,7 @@ import java.io.IOException;
 
 public class MoliaConfig {
     public static long checkStuckInWallInterval = 10;
+    public static double entityWakeUpDurationRatioStandardDeviation = 0.2;
 
     private static final YamlConfiguration configEntry = new YamlConfiguration();
     private static final File CONFIG_FILE = new File("molia.yml");
@@ -22,6 +23,7 @@ public class MoliaConfig {
         configEntry.options().copyDefaults(true);
 
         checkStuckInWallInterval = getLong("optimizations.check_stuck_in_wall_interval",10);
+        entityWakeUpDurationRatioStandardDeviation = getDouble("optimizations.entity_wake_up_duration_ratio_standard_deviation",0.2D);
 
         save();
     }
@@ -39,6 +41,11 @@ public class MoliaConfig {
         return configEntry.getInt(key);
     }
 
+    public static double getDouble(String key,double def){
+        configEntry.addDefault(key,def);
+        return configEntry.getDouble(key);
+    }
+
     public static long getLong(String key,int def){
         configEntry.addDefault(key,def);
         return configEntry.getLong(key);
diff --git a/src/main/java/org/spigotmc/ActivationRange.java b/src/main/java/org/spigotmc/ActivationRange.java
index 5b85034aeb2445a980f8d6156cea6a483ce97391..d0f44a31c2e558bb72d9649767e8f4610c93ae86 100644
--- a/src/main/java/org/spigotmc/ActivationRange.java
+++ b/src/main/java/org/spigotmc/ActivationRange.java
@@ -1,5 +1,6 @@
 package org.spigotmc;
 
+import me.earthme.molia.MoliaConfig;
 import net.minecraft.core.BlockPos;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.level.ServerChunkCache;
@@ -71,28 +72,40 @@ public class ActivationRange
         if (entity.activationType == ActivationType.VILLAGER) {
             if (inactiveFor > config.wakeUpInactiveVillagersEvery && worldData.wakeupInactiveRemainingVillagers > 0) { // Folia - threaded regions
                 worldData.wakeupInactiveRemainingVillagers--; // Folia - threaded regions
-                return config.wakeUpInactiveVillagersFor;
+                return getWakeUpDurationWithVariance(entity, config.wakeUpInactiveVillagersFor); // Gale - variable entity wake-up duration
             }
         } else if (entity.activationType == ActivationType.ANIMAL) {
             if (inactiveFor > config.wakeUpInactiveAnimalsEvery && worldData.wakeupInactiveRemainingAnimals > 0) { // Folia - threaded regions
                 worldData.wakeupInactiveRemainingAnimals--; // Folia - threaded regions
-                return config.wakeUpInactiveAnimalsFor;
+                return getWakeUpDurationWithVariance(entity, config.wakeUpInactiveAnimalsFor); // Gale - variable entity wake-up duration
             }
         } else if (entity.activationType == ActivationType.FLYING_MONSTER) {
             if (inactiveFor > config.wakeUpInactiveFlyingEvery && worldData.wakeupInactiveRemainingFlying > 0) { // Folia - threaded regions
                 worldData.wakeupInactiveRemainingFlying--; // Folia - threaded regions
-                return config.wakeUpInactiveFlyingFor;
+                return getWakeUpDurationWithVariance(entity, config.wakeUpInactiveFlyingFor); // Gale - variable entity wake-up duration
             }
         } else if (entity.activationType == ActivationType.MONSTER || entity.activationType == ActivationType.RAIDER) {
             if (inactiveFor > config.wakeUpInactiveMonstersEvery && worldData.wakeupInactiveRemainingMonsters > 0) { // Folia - threaded regions
                 worldData.wakeupInactiveRemainingMonsters--; // Folia - threaded regions
-                return config.wakeUpInactiveMonstersFor;
+                return getWakeUpDurationWithVariance(entity, config.wakeUpInactiveMonstersFor); // Gale - variable entity wake-up duration
             }
         }
         return -1;
     }
     // Paper end
 
+    // Gale start - variable entity wake-up duration
+    private static final java.util.Random wakeUpDurationRandom = new java.util.Random();
+
+    private static int getWakeUpDurationWithVariance(Entity entity, int wakeUpDuration) {
+        double deviation = MoliaConfig.entityWakeUpDurationRatioStandardDeviation;
+        if (deviation <= 0) {
+            return wakeUpDuration;
+        }
+        return (int) Math.min(Integer.MAX_VALUE, Math.max(1, Math.round(wakeUpDuration * wakeUpDurationRandom.nextGaussian(1, deviation))));
+    }
+    // Gale end - variable entity wake-up duration
+
     static AABB maxBB = new AABB( 0, 0, 0, 0, 0, 0 );
 
     /**
